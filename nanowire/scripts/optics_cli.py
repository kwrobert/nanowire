import os
import click
# from nanowire.optics.simulate import SimulationManager, run_sim, update_sim
# from nanowire.optics.utils.config import Config

exist_read_path = click.Path(exists=True, resolve_path=True, readable=True,
                             file_okay=True, dir_okay=False)
exist_read_dir = click.Path(exists=True, resolve_path=True, readable=True,
                            writable=True, dir_okay=True, file_okay=False)
cli_path = click.Path()


@click.group()
def optics():
    """
    The command line interface to the nanowire optics library.

    type optics [SUBCOMMAND] --help for help with the various subcommands
    """


h1 = "Path to the parameters file. Used for providing additional parameters " \
     "to the preprocessor and performing parameter sweeps"
h2 = "Path to the parent group of the table inside the HDF5 file used for " \
     "storing configurations"""
h3 = "Name of the table at the end of table_path for storing configurations"
h4 = "A list of keys within the configs to skip when generating the config ID"


@optics.command()
@click.argument('template', type=exist_read_path)
@click.argument('db', type=cli_path)
@click.option('-p', '--params', default=None, type=exist_read_path, help=h1)
@click.option('-t', '--table_path', default='/', help=h2, show_default=True)
@click.option('-n', '--table_name', default='simulations', help=h3,
              show_default=True)
@click.option('-s', '--skip_keys', default=['General', 'Materials'], help=h4,
              show_default=True)
def preprocess(template, db, params, table_path, table_name, skip_keys):
    """
    Preprocess the template file located at path TEMPLATE and generate
    Config object(s) which are stored in the HDF5 file DB.
    """

    import nanowire.preprocess.preprocessor as pp

    pp = pp.Preprocessor(template, params=params)
    click.echo('Generating configs ...')
    pp.generate_configs()
    click.echo('Writing configs to disk ...')
    pp.write_configs()
    click.echo('Writing configs to database ...')
    pp.add_to_database(db_path=db, tb_path=table_path, tb_name=table_name,
                       skip_keys=skip_keys)
    click.secho('Preprocessing complete!', fg='green')


h1 = "The directory to store all the simulation outputs in. Defaults to " \
     "the same directory as the provided config file"


@optics.command()
@click.argument('config', type=exist_read_path)
@click.option('-o', '--output_dir', type=exist_read_dir, default=None, help=h1)
def run(config, output_dir):
    """
    Run a single simulation

    CONFIG must be a path to a config file for a single simulation in valid
    YAML format. No preprocessing is performed on this file. If this file was
    generated by the preprocessor, you are all set. However, you could choose
    to write a config file by hand and use it to run simulations if you like
    """

    import nanowire.optics.simulate as simul
    import nanowire.preprocess.preprocessor as pp

    conf = pp.Config.fromFile(config)
    if output_dir is None:
        output_dir = os.path.dirname(config)
    simul.run_sim(conf, output_dir)
