[General]
# Base directory under which to run your simulation(s)
basedir=/home/kyle_robertson/schoolwork/gradschool/nanowire/code/float_test
# Base length unit defined relative to a meter (so nm would be 10E-9)
base_unit=10E-6
# Path to sun input power file
input_power=/home/kyle_robertson/schoolwork/gradschool/nanowire/code/Input_sun_power.txt
# Output file base name for fields 
base_name=field_data
# Number of output sample in the x, y, and z directions
x_samples=100
y_samples=100
z_samples=92
# Would you like to post process automatically after your run? (Leave empty for no,
# or populate with anything if yes)
postprocess=
# Would you like to save the plots for each sim?
save_plots=Yes
# Would you like to show the plots during postprocessing in real time?
show_plots=

[Simulation]
# These options configure the various FMM formulations used within the simulation. See
# the S4 docs and paper for details 

## These are the defaults
#Verbosity = 0
#LatticeTruncation = Circular
#DiscretizedEpsilon = False
#DiscretizationResolution = 8
#PolarizationDecomposition = False
#PolarizationBasis = Default
#LanczosSmoothing = False
#SubpixelSmoothing = False
#ConserveMemory = False

Verbosity = 1
LatticeTruncation = Circular
DiscretizedEpsilon = False
DiscretizationResolution = 8
PolarizationDecomposition = True
PolarizationBasis = Jones
LanczosSmoothing = False
SubpixelSmoothing = False
ConserveMemory = False

[Materials]
# Each entry should contain the desired name for the material, and the path to its nk file 
ITO=/home/kyle_robertson/schoolwork/gradschool/nanowire/code/NK/008_ITO_nk_Hz.txt
AlInP=/home/kyle_robertson/schoolwork/gradschool/nanowire/code/NK/009_AlInP_nk_Hz.txt
GaAs=/home/kyle_robertson/schoolwork/gradschool/nanowire/code/NK/006_GaAs_nk_Walker_modified_Hz.txt
SiO2=/home/kyle_robertson/schoolwork/gradschool/nanowire/code/NK/004_SiO2_nk_Hz.txt
Cyclotrene=/home/kyle_robertson/schoolwork/gradschool/nanowire/code/NK/007_Cyclotrene_nk_Hz.txt

[Fixed Parameters]
# The frequency of this simulation in Hz

# Geometric params expressed as multiples of your base unit
array_period=.3
nw_radius=.075
nw_height=1.3
alinp_height=1.27
sio2_height=.03
substrate_t=1.
shell_t=.02
ito_t=.3
air_t=.5
emitter_t=.01
intrinsic_t=.05
numbasis=100

[Variable Parameters]
# Specify the parameters you would like to sweep through there.
# Format: start;stop;step_size
# NOTE: This is inclusive of the endpoint
# ALSO NOTE: If you are specifying a sweep through a parameter that must be
# an integer, make sure the difference between your start and end values is 
# evenly divisible by your step size to avoid ambiguity/unexpected results

# Number of terms in x-y Fourier expansion. Increasing this increases
# sim time as N^3 and memory consumption as N^2

frequency=3E14,5E14
#substrate_t=.8:1.:.1

[Cruncher]
# What quantities would you like to calculate for each simulation?
# Format with the quantity as the option name and 
# the arguments to that quantity's calculating function
# as a comma seperated list of values. Can supploy multiple sets of 
# arguments by seperating multiple comma-seperated lists with a semi-colon
normE=
normEsquared=
#normH=
#normHsquared=

[Global_Cruncher]
#mean_squared_error=E,True,0,True

[Plotter]
# If you do, what kind of plots would you like to generate?
# Must choose from a list of supported options!!!
#full_3d=normE
#planes_3d=normE,25,25;normH,25,25
# plane_2d=normE,z,46,True,False 
# 1) Value to plot
# 2) Plane
# 3) Which plane?
# 4) Draw nanowire components?
# 5) Fix colorbar limits? 
plane_2d=normE,z,46;normE,x,50

[Global_Plotter]
#convergence=E,log
